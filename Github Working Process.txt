
##########################################
##########################################
How to use git for configration 
git config --global user.name " name "
git config --global user.email "emailaddress"
 

git init projectName
cd projectName
la -al (master)
git status
mate README.md

git remote -v
git push -u origin master --tags

####################################################
####################################################

# copy data 
cp -R ~/Download/* .
ls -al


#############################################
git status
git add .
git status
git commit -m "add all text file"
git push origin master
git push 

git config --global push.default simple
git push

#######################################

# create local branch on system
git checkout -b branch-name



#####################################
# Remove file on git
git rm file-name
ls -l
git commit -m "remove file"
git status

# push on other new brach on github
git push -u origin branch-name

##############################################

# use after change local and github machine
git fatch
git pull
ls -al # see all file 


#######################################################
##### How to create new branch  #######################

git branch -a   ((  # list of brach))

git branch   ((  # list of brach))

git branch branchName   (( create new branch only ))

git checkout -b Brach_Name (( first create branch and Switched in branch ))

git checkout Brach_Name (( Switched branch only ))

git merge BranchName    ((( this command use for merge two branch ))

git push origin --delete BranchName   ((( this command use for delete branch both location local and github ))

git branch -d BranchName    ( this command use for delete branch local System ))


git push -u origin Brach_Name  (( this command use for push you code on switched branch )))

git push origin :BranchName  (( this commannd use for update on github to local delete branch )))

###############################################################


############################### Use of Clone and work perform ##########################
1- git clone "here url of clone"
2-ls -l
3- cd "Your clone reo folder"
4-ls -l
5-git remote -v
6-git status
7-git add .
8-git status
9-git commit -m "Here message"
10-git push origin master
11-go on github web and refresh you reposity
############################################



##################################################
# How to use git for github for working task
git state    ( Working directory area file)	
git add.    (this command can do stage area file)
git commit -m "Here put you message"    (this is you save file stage to on git)
git log   (this command use for see who change and update something this project)

## commit ##
git log --oneline   (this command use for see commit who change and update something this project in Oneline)
git log --oneline --graphs  (this command use for see who change and update something this project in graphs)
git log --oneline --decorate

git push origin master (this use for put stage area to git repositry save on github web)
git pull      (this use for any update on your github web to save on your working local directory)

git diff  fileName ( this command show modified: fileName text what modified in this file) 
git diff staged (this use show and see stage area what modified

git reset fileName (this command use for unStaged for file) 

######################################################


#################################################
##  Tags use #######  Two types of tags (Light Weate tag => this is simple not store any info only tagName) 
##       and (Anotete tags => this is store tag name and info in message)  ###
git tag    (( give list of all tags you create))

git tag TagName BranchName  (( this use for create first type of tag light weate tag ))
git tag -a TagName -m "Message of tag"  (( this use for create second type of tag -a(mean anotete)))
git tag    (( give list of all tags you create))

git pull    (( this is not update tag on github )
git push origin TagsName   (( this update tag on github only one ))
git push --force origin TagName (( if the tag is alread in github page its create new and replace old))
git push --tags       (( this use for updata all tags on github ))

git fetch -p
git tag -d TagName   (( this is use for delete the tag
git push origin :TagName   (( this is use for update delete tag info on github its delete its))



###############################################
# Staging basics in git
git add -A   (stages all)
git add .    (stages new and modified, without deleted)
git add -u   (stages modified and deleted , without new)


# Enter your Information on git
git config --global user.name "YourName"
git config --global user.email "YourEmail"

#######################################################

################
When you try to see any file Content text 
cat fileName

